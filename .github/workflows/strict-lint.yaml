name: ESLint Check

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  contents: write

jobs: 
  lint-and-deploy:
    name: Run ESLint check and deploy preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm install

      # - name: Run ESLint test
      #   run: npm run lint:strict
      #   continue-on-error: true
      #   id: eslint

      # - name: Block PR if ESLint fails
      #   continue-on-error: true
      #   if: steps.eslint.outcome == 'failure'
      #   uses: actions/github-script@v6
      #   with:
      #     github-token: ${{ secrets.VAI }}
      #     script: |
      #       github.rest.pulls.createReview({
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         pull_number: context.issue.number,
      #         event: 'REQUEST_CHANGES',
      #         body: 'WORKFLOW BOT: ESLint check failed. Please fix all linting issues (including warnings) before merging.'
      #       })

      # - name: Check for ESLint result
      #   if: steps.eslint.outcome == 'failure'
      #   run: |
      #     echo "Strict ESLint Check found issues. Failing the workflow."
      #     exit 1

      - name: Install dependencies (production)
        run: npm ci

      - name: Build project from React files
        run: npm run build

      - name: Deploy to Netlify without CLI
        uses: netlify/actions/cli@v1
        with:
          publish-dir: './build'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.SITEID }}
          NETLIFY_SITE_ID: ${{ secrets.TOKEN }}

      - name: Comment URL preview on PR
        continue-on-error: true
        uses: actions/github-script@v7
        with:
          script: |
            const previewUrl = `https://${{ secrets.SITEID }}.netlify.app`;
            const issue_number = context.issue.number;
            const username = context.actor;
            await github.rest.issues.createComment({
              issue_number: issue_number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `WORKFLOW BOT: @${username} your preview URL has been generated: ${previewUrl}`
            });
