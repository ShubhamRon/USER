name: ESLint Check

on:
  workflow_dispatch:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  contents: write
 
jobs: 
  lint-and-deploy:
    name: Run ESLint check and deploy Preview
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: install all Dependencies
        run: npm ci

      - name: Run ESLint test
        run: npm run lint:strict
        continue-on-error: true
        id: eslint

      - name: block PR if ESLint fails
        continue-on-error: true
        if: steps.eslint.outcome == 'failure'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.pulls.createReview({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
              event: 'REQUEST_CHANGES',
              body: 'ESLint check failed. Please fix all linting issues (including warnings) before merging.'
            })

      - name: check for ESLint result
        continue-on-error: true
        if: steps.eslint.outcome == 'failure'
        run: |
          echo "ESLint found issues. Failing the workflow."
          exit 1
          
      - name: setup NodeJS for Build
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "npm"

      - name: build Project from React Files
        run: |
          CI=false
          npm run build

      - name: deploy to netlify
        continue-on-error: true
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v2.0
        with:
          publish-dir: './build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}  # GITHUB_TOKEN and VAI throwing resource-inaccessible error
          deploy-message: "FROM GITHUB_ACTIONS"
          enable-pull-request-comment: true
          enable-commit-comment: false
          overwrites-pull-request-comment: true
          enable-github-deployment: false
          alias: deploy-preview-${{ github.event.number }}
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.SITEID }}
        timeout-minutes: 1
          
      # - name: Comment URL preview on PR
      #   continue-on-error: true
      #   uses: actions/github-script@v7
      #   with:
      #     script: |
      #       const deployUrl = '${{ steps.netlify-deploy.outputs.deploy-url }}';
      #       const issueNumber = context.issue.number;
      #       const username = context.actor;
            
      #       if (deployUrl) {
      #         github.rest.issues.createComment({
      #           issue_number: issueNumber,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           body: `WORKFLOW BOT: @${username} your preview URL has been generated: ${deployUrl}`
      #         });
      #       } else {
      #          github.rest.issues.createComment({
      #           issue_number: issueNumber,
      #           owner: context.repo.owner,
      #           repo: context.repo.repo,
      #           body: `WORKFLOW BOT: @${username} your preview URL not deployed`
      #         });
      #       }
